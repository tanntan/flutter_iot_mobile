// Mocks generated by Mockito 5.4.2 from annotations
// in iot_app/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:ui' as _i11;

import 'package:core/core.dart' as _i7;
import 'package:core/src/helper/helper.dart' as _i5;
import 'package:esp_provisioning/esp_provisioning.dart' as _i2;
import 'package:flutter/material.dart' as _i9;
import 'package:flutter_blue_plus/flutter_blue_plus.dart' as _i14;
import 'package:iot_app/core/model/activeLine_model.dart' as _i6;
import 'package:iot_app/core/model/companyInfo_model.dart' as _i3;
import 'package:iot_app/core/model/iot_device_model.dart' as _i20;
import 'package:iot_app/core/model/login_model.dart' as _i17;
import 'package:iot_app/core/model/user_model.dart' as _i4;
import 'package:iot_app/services/ble_service.dart' as _i13;
import 'package:iot_app/services/companylogin_service.dart' as _i16;
import 'package:iot_app/services/globaladmin_service.dart' as _i15;
import 'package:iot_app/services/hacs_service.dart' as _i22;
import 'package:iot_app/services/iotapi_service.dart' as _i19;
import 'package:iot_app/services/ltie_service.dart' as _i21;
import 'package:iot_app/services/theme_service.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i18;
import 'package:stacked_services/stacked_services.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEspProv_0 extends _i1.SmartFake implements _i2.EspProv {
  _FakeEspProv_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_1 extends _i1.SmartFake implements Duration {
  _FakeDuration_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompanyInfoModel_2 extends _i1.SmartFake
    implements _i3.CompanyInfoModel {
  _FakeCompanyInfoModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_3 extends _i1.SmartFake implements _i4.UserModel {
  _FakeUserModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaging_4<T extends dynamic> extends _i1.SmartFake
    implements _i5.Paging<T> {
  _FakePaging_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActiveLineModel_5 extends _i1.SmartFake
    implements _i6.ActiveLineModel {
  _FakeActiveLineModel_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseApi_6 extends _i1.SmartFake implements _i7.BaseApi {
  _FakeBaseApi_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i8.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i9.GlobalKey<_i9.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i9.GlobalKey<_i9.NavigatorState>?);
  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i8.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<T?>? navigateWithTransition<T>(
    _i9.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i9.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i8.Transition? transitionClass,
    _i8.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? replaceWithTransition<T>(
    _i9.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i9.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i8.Transition? transitionClass,
    _i8.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void popUntil(
    _i9.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i9.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? navigateToView<T>(
    _i9.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i9.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i8.Transition? transition,
    _i8.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i9.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? clearStackAndShowView<T>(
    _i9.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? clearTillFirstAndShowView<T>(
    _i9.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i9.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i10.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i8.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i8.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<_i8.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i10.Future<_i8.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i10.Future<_i8.SheetResponse<dynamic>?>.value(),
      ) as _i10.Future<_i8.SheetResponse<dynamic>?>);
  @override
  _i10.Future<_i8.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i11.Color? barrierColor = const _i11.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i10.Future<_i8.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i10.Future<_i8.SheetResponse<T>?>.value(),
      ) as _i10.Future<_i8.SheetResponse<T>?>);
  @override
  void completeSheet(_i8.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i8.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i8.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i9.Widget Function(
      _i9.BuildContext,
      _i8.DialogRequest<dynamic>,
      dynamic Function(_i8.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<_i8.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i11.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i11.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i8.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i10.Future<_i8.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i10.Future<_i8.DialogResponse<dynamic>?>.value(),
      ) as _i10.Future<_i8.DialogResponse<dynamic>?>);
  @override
  _i10.Future<_i8.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i11.Color? barrierColor = const _i11.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i10.Future<_i8.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i10.Future<_i8.DialogResponse<T>?>.value(),
      ) as _i10.Future<_i8.DialogResponse<T>?>);
  @override
  _i10.Future<_i8.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i11.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i11.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i8.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i10.Future<_i8.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i10.Future<_i8.DialogResponse<dynamic>?>.value(),
      ) as _i10.Future<_i8.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i8.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ThemeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeService extends _i1.Mock implements _i12.ThemeService {}

/// A class which mocks [BleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBleService extends _i1.Mock implements _i13.BleService {
  @override
  set selectedBluetoothDevice(_i14.BluetoothDevice? _selectedBluetoothDevice) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedBluetoothDevice,
          _selectedBluetoothDevice,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<_i14.BluetoothAdapterState> start() => (super.noSuchMethod(
        Invocation.method(
          #start,
          [],
        ),
        returnValue: _i10.Future<_i14.BluetoothAdapterState>.value(
            _i14.BluetoothAdapterState.unknown),
        returnValueForMissingStub:
            _i10.Future<_i14.BluetoothAdapterState>.value(
                _i14.BluetoothAdapterState.unknown),
      ) as _i10.Future<_i14.BluetoothAdapterState>);
  @override
  void select(_i14.BluetoothDevice? bluetoothDevice) => super.noSuchMethod(
        Invocation.method(
          #select,
          [bluetoothDevice],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<bool> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Stream<List<_i14.ScanResult>> scanBle(List<_i14.Guid>? services) =>
      (super.noSuchMethod(
        Invocation.method(
          #scanBle,
          [services],
        ),
        returnValue: _i10.Stream<List<_i14.ScanResult>>.empty(),
        returnValueForMissingStub: _i10.Stream<List<_i14.ScanResult>>.empty(),
      ) as _i10.Stream<List<_i14.ScanResult>>);
  @override
  _i10.Future<void> stopScanBle() => (super.noSuchMethod(
        Invocation.method(
          #stopScanBle,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.EspProv> startProvisioning({
    _i14.BluetoothDevice? bluetoothDevice,
    String? pop = r'abcd1234',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startProvisioning,
          [],
          {
            #bluetoothDevice: bluetoothDevice,
            #pop: pop,
          },
        ),
        returnValue: _i10.Future<_i2.EspProv>.value(_FakeEspProv_0(
          this,
          Invocation.method(
            #startProvisioning,
            [],
            {
              #bluetoothDevice: bluetoothDevice,
              #pop: pop,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i2.EspProv>.value(_FakeEspProv_0(
          this,
          Invocation.method(
            #startProvisioning,
            [],
            {
              #bluetoothDevice: bluetoothDevice,
              #pop: pop,
            },
          ),
        )),
      ) as _i10.Future<_i2.EspProv>);
  @override
  _i10.Future<bool> requestBlePermissions() => (super.noSuchMethod(
        Invocation.method(
          #requestBlePermissions,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
}

/// A class which mocks [GlobaladminService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGlobaladminService extends _i1.Mock
    implements _i15.GlobaladminService {}

/// A class which mocks [CompanyLoginService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCompanyLoginService extends _i1.Mock
    implements _i16.CompanyLoginService {
  @override
  set fromJsonFn(_i5.GenericCallback<_i3.CompanyInfoModel>? _fromJsonFn) =>
      super.noSuchMethod(
        Invocation.setter(
          #fromJsonFn,
          _fromJsonFn,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get resx => (super.noSuchMethod(
        Invocation.getter(#resx),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set resx(String? _resx) => super.noSuchMethod(
        Invocation.setter(
          #resx,
          _resx,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, String> get apiHeaders => (super.noSuchMethod(
        Invocation.getter(#apiHeaders),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  set apiHeaders(Map<String, String>? _apiHeaders) => super.noSuchMethod(
        Invocation.setter(
          #apiHeaders,
          _apiHeaders,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_1(
          this,
          Invocation.getter(#timeout),
        ),
        returnValueForMissingStub: _FakeDuration_1(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);
  @override
  set timeout(Duration? _timeout) => super.noSuchMethod(
        Invocation.setter(
          #timeout,
          _timeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<_i3.CompanyInfoModel> companyLogin(_i3.CompanyModel? login) =>
      (super.noSuchMethod(
        Invocation.method(
          #companyLogin,
          [login],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #companyLogin,
            [login],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #companyLogin,
            [login],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i4.UserModel> userLogin(_i17.LoginModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #userLogin,
          [user],
        ),
        returnValue: _i10.Future<_i4.UserModel>.value(_FakeUserModel_3(
          this,
          Invocation.method(
            #userLogin,
            [user],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i4.UserModel>.value(_FakeUserModel_3(
          this,
          Invocation.method(
            #userLogin,
            [user],
          ),
        )),
      ) as _i10.Future<_i4.UserModel>);
  @override
  _i10.Future<dynamic> getFactoryDetails() => (super.noSuchMethod(
        Invocation.method(
          #getFactoryDetails,
          [],
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> authentication() => (super.noSuchMethod(
        Invocation.method(
          #authentication,
          [],
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<_i3.CompanyInfoModel> add(_i3.CompanyInfoModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [obj],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #add,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #add,
            [obj],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i3.CompanyInfoModel> copy(_i3.CompanyInfoModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #copy,
          [obj],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #copy,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #copy,
            [obj],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i3.CompanyInfoModel> update(_i3.CompanyInfoModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [obj],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #update,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #update,
            [obj],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i3.CompanyInfoModel> remove(_i3.CompanyInfoModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #remove,
          [obj],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #remove,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #remove,
            [obj],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i3.CompanyInfoModel> find(String? id) => (super.noSuchMethod(
        Invocation.method(
          #find,
          [id],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #find,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #find,
            [id],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<List<_i3.CompanyInfoModel>> all() => (super.noSuchMethod(
        Invocation.method(
          #all,
          [],
        ),
        returnValue: _i10.Future<List<_i3.CompanyInfoModel>>.value(
            <_i3.CompanyInfoModel>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i3.CompanyInfoModel>>.value(
                <_i3.CompanyInfoModel>[]),
      ) as _i10.Future<List<_i3.CompanyInfoModel>>);
  @override
  _i10.Future<_i5.Paging<_i3.CompanyInfoModel>> filter([dynamic filter]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filter,
          [filter],
        ),
        returnValue: _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>.value(
            _FakePaging_4<_i3.CompanyInfoModel>(
          this,
          Invocation.method(
            #filter,
            [filter],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>.value(
                _FakePaging_4<_i3.CompanyInfoModel>(
          this,
          Invocation.method(
            #filter,
            [filter],
          ),
        )),
      ) as _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>);
  @override
  _i10.Future<_i5.Paging<_i3.CompanyInfoModel>> filterMeta({
    String? meta,
    num? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterMeta,
          [],
          {
            #meta: meta,
            #page: page,
          },
        ),
        returnValue: _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>.value(
            _FakePaging_4<_i3.CompanyInfoModel>(
          this,
          Invocation.method(
            #filterMeta,
            [],
            {
              #meta: meta,
              #page: page,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>.value(
                _FakePaging_4<_i3.CompanyInfoModel>(
          this,
          Invocation.method(
            #filterMeta,
            [],
            {
              #meta: meta,
              #page: page,
            },
          ),
        )),
      ) as _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>);
  @override
  T cast<T>(
    dynamic json,
    _i5.GenericCallback<T>? fromJsonFn,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cast,
          [
            json,
            fromJsonFn,
          ],
        ),
        returnValue: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #cast,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
        returnValueForMissingStub: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #cast,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
      ) as T);
  @override
  _i5.Paging<T> castPage<T>(
    dynamic json,
    _i5.GenericCallback<T>? fromJsonFn,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #castPage,
          [
            json,
            fromJsonFn,
          ],
        ),
        returnValue: _FakePaging_4<T>(
          this,
          Invocation.method(
            #castPage,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
        returnValueForMissingStub: _FakePaging_4<T>(
          this,
          Invocation.method(
            #castPage,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
      ) as _i5.Paging<T>);
  @override
  _i10.Future<dynamic> get({
    String? route,
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #route: route,
            #params: params,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> delete({
    String? route,
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #route: route,
            #params: params,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> put({
    String? route,
    Map<String, dynamic>? params,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #route: route,
            #params: params,
            #body: body,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> post({
    required String? route,
    required Map<String, dynamic>? params,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #route: route,
            #params: params,
            #body: body,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<String> hass({
    String? route,
    Map<String, dynamic>? params,
    String? code,
    String? clientid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hass,
          [],
          {
            #route: route,
            #params: params,
            #code: code,
            #clientid: clientid,
          },
        ),
        returnValue: _i10.Future<String>.value(''),
        returnValueForMissingStub: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
}

/// A class which mocks [IotapiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIotapiService extends _i1.Mock implements _i19.IotapiService {
  @override
  set fromJsonFn(_i5.GenericCallback<_i3.CompanyInfoModel>? _fromJsonFn) =>
      super.noSuchMethod(
        Invocation.setter(
          #fromJsonFn,
          _fromJsonFn,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get resx => (super.noSuchMethod(
        Invocation.getter(#resx),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set resx(String? _resx) => super.noSuchMethod(
        Invocation.setter(
          #resx,
          _resx,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, String> get apiHeaders => (super.noSuchMethod(
        Invocation.getter(#apiHeaders),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  set apiHeaders(Map<String, String>? _apiHeaders) => super.noSuchMethod(
        Invocation.setter(
          #apiHeaders,
          _apiHeaders,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_1(
          this,
          Invocation.getter(#timeout),
        ),
        returnValueForMissingStub: _FakeDuration_1(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);
  @override
  set timeout(Duration? _timeout) => super.noSuchMethod(
        Invocation.setter(
          #timeout,
          _timeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<List<_i20.IotDeviceModel>> getDevice() => (super.noSuchMethod(
        Invocation.method(
          #getDevice,
          [],
        ),
        returnValue: _i10.Future<List<_i20.IotDeviceModel>>.value(
            <_i20.IotDeviceModel>[]),
        returnValueForMissingStub: _i10.Future<List<_i20.IotDeviceModel>>.value(
            <_i20.IotDeviceModel>[]),
      ) as _i10.Future<List<_i20.IotDeviceModel>>);
  @override
  _i10.Future<bool> postDevice(_i20.IotDeviceModel? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #postDevice,
          [body],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<bool> updateDevice(
    _i20.IotDeviceModel? body,
    int? idx,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDevice,
          [
            body,
            idx,
          ],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<_i3.CompanyInfoModel> add(_i3.CompanyInfoModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [obj],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #add,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #add,
            [obj],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i3.CompanyInfoModel> copy(_i3.CompanyInfoModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #copy,
          [obj],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #copy,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #copy,
            [obj],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i3.CompanyInfoModel> update(_i3.CompanyInfoModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [obj],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #update,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #update,
            [obj],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i3.CompanyInfoModel> remove(_i3.CompanyInfoModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #remove,
          [obj],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #remove,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #remove,
            [obj],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<_i3.CompanyInfoModel> find(String? id) => (super.noSuchMethod(
        Invocation.method(
          #find,
          [id],
        ),
        returnValue:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #find,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i3.CompanyInfoModel>.value(_FakeCompanyInfoModel_2(
          this,
          Invocation.method(
            #find,
            [id],
          ),
        )),
      ) as _i10.Future<_i3.CompanyInfoModel>);
  @override
  _i10.Future<List<_i3.CompanyInfoModel>> all() => (super.noSuchMethod(
        Invocation.method(
          #all,
          [],
        ),
        returnValue: _i10.Future<List<_i3.CompanyInfoModel>>.value(
            <_i3.CompanyInfoModel>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i3.CompanyInfoModel>>.value(
                <_i3.CompanyInfoModel>[]),
      ) as _i10.Future<List<_i3.CompanyInfoModel>>);
  @override
  _i10.Future<_i5.Paging<_i3.CompanyInfoModel>> filter([dynamic filter]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filter,
          [filter],
        ),
        returnValue: _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>.value(
            _FakePaging_4<_i3.CompanyInfoModel>(
          this,
          Invocation.method(
            #filter,
            [filter],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>.value(
                _FakePaging_4<_i3.CompanyInfoModel>(
          this,
          Invocation.method(
            #filter,
            [filter],
          ),
        )),
      ) as _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>);
  @override
  _i10.Future<_i5.Paging<_i3.CompanyInfoModel>> filterMeta({
    String? meta,
    num? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterMeta,
          [],
          {
            #meta: meta,
            #page: page,
          },
        ),
        returnValue: _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>.value(
            _FakePaging_4<_i3.CompanyInfoModel>(
          this,
          Invocation.method(
            #filterMeta,
            [],
            {
              #meta: meta,
              #page: page,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>.value(
                _FakePaging_4<_i3.CompanyInfoModel>(
          this,
          Invocation.method(
            #filterMeta,
            [],
            {
              #meta: meta,
              #page: page,
            },
          ),
        )),
      ) as _i10.Future<_i5.Paging<_i3.CompanyInfoModel>>);
  @override
  T cast<T>(
    dynamic json,
    _i5.GenericCallback<T>? fromJsonFn,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cast,
          [
            json,
            fromJsonFn,
          ],
        ),
        returnValue: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #cast,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
        returnValueForMissingStub: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #cast,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
      ) as T);
  @override
  _i5.Paging<T> castPage<T>(
    dynamic json,
    _i5.GenericCallback<T>? fromJsonFn,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #castPage,
          [
            json,
            fromJsonFn,
          ],
        ),
        returnValue: _FakePaging_4<T>(
          this,
          Invocation.method(
            #castPage,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
        returnValueForMissingStub: _FakePaging_4<T>(
          this,
          Invocation.method(
            #castPage,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
      ) as _i5.Paging<T>);
  @override
  _i10.Future<dynamic> get({
    String? route,
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #route: route,
            #params: params,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> delete({
    String? route,
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #route: route,
            #params: params,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> put({
    String? route,
    Map<String, dynamic>? params,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #route: route,
            #params: params,
            #body: body,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> post({
    required String? route,
    required Map<String, dynamic>? params,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #route: route,
            #params: params,
            #body: body,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<String> hass({
    String? route,
    Map<String, dynamic>? params,
    String? code,
    String? clientid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hass,
          [],
          {
            #route: route,
            #params: params,
            #code: code,
            #clientid: clientid,
          },
        ),
        returnValue: _i10.Future<String>.value(''),
        returnValueForMissingStub: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
}

/// A class which mocks [LtieService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLtieService extends _i1.Mock implements _i21.LtieService {
  @override
  set fromJsonFn(_i5.GenericCallback<_i6.ActiveLineModel>? _fromJsonFn) =>
      super.noSuchMethod(
        Invocation.setter(
          #fromJsonFn,
          _fromJsonFn,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get resx => (super.noSuchMethod(
        Invocation.getter(#resx),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set resx(String? _resx) => super.noSuchMethod(
        Invocation.setter(
          #resx,
          _resx,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, String> get apiHeaders => (super.noSuchMethod(
        Invocation.getter(#apiHeaders),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  set apiHeaders(Map<String, String>? _apiHeaders) => super.noSuchMethod(
        Invocation.setter(
          #apiHeaders,
          _apiHeaders,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_1(
          this,
          Invocation.getter(#timeout),
        ),
        returnValueForMissingStub: _FakeDuration_1(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);
  @override
  set timeout(Duration? _timeout) => super.noSuchMethod(
        Invocation.setter(
          #timeout,
          _timeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<_i6.ActiveLineModel> getActiveLine(Map<String, dynamic>? param) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActiveLine,
          [param],
        ),
        returnValue:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #getActiveLine,
            [param],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #getActiveLine,
            [param],
          ),
        )),
      ) as _i10.Future<_i6.ActiveLineModel>);
  @override
  _i10.Future<_i6.ActiveLineModel> add(_i6.ActiveLineModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [obj],
        ),
        returnValue:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #add,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #add,
            [obj],
          ),
        )),
      ) as _i10.Future<_i6.ActiveLineModel>);
  @override
  _i10.Future<_i6.ActiveLineModel> copy(_i6.ActiveLineModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #copy,
          [obj],
        ),
        returnValue:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #copy,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #copy,
            [obj],
          ),
        )),
      ) as _i10.Future<_i6.ActiveLineModel>);
  @override
  _i10.Future<_i6.ActiveLineModel> update(_i6.ActiveLineModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [obj],
        ),
        returnValue:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #update,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #update,
            [obj],
          ),
        )),
      ) as _i10.Future<_i6.ActiveLineModel>);
  @override
  _i10.Future<_i6.ActiveLineModel> remove(_i6.ActiveLineModel? obj) =>
      (super.noSuchMethod(
        Invocation.method(
          #remove,
          [obj],
        ),
        returnValue:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #remove,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #remove,
            [obj],
          ),
        )),
      ) as _i10.Future<_i6.ActiveLineModel>);
  @override
  _i10.Future<_i6.ActiveLineModel> find(String? id) => (super.noSuchMethod(
        Invocation.method(
          #find,
          [id],
        ),
        returnValue:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #find,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.ActiveLineModel>.value(_FakeActiveLineModel_5(
          this,
          Invocation.method(
            #find,
            [id],
          ),
        )),
      ) as _i10.Future<_i6.ActiveLineModel>);
  @override
  _i10.Future<List<_i6.ActiveLineModel>> all() => (super.noSuchMethod(
        Invocation.method(
          #all,
          [],
        ),
        returnValue: _i10.Future<List<_i6.ActiveLineModel>>.value(
            <_i6.ActiveLineModel>[]),
        returnValueForMissingStub: _i10.Future<List<_i6.ActiveLineModel>>.value(
            <_i6.ActiveLineModel>[]),
      ) as _i10.Future<List<_i6.ActiveLineModel>>);
  @override
  _i10.Future<_i5.Paging<_i6.ActiveLineModel>> filter([dynamic filter]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filter,
          [filter],
        ),
        returnValue: _i10.Future<_i5.Paging<_i6.ActiveLineModel>>.value(
            _FakePaging_4<_i6.ActiveLineModel>(
          this,
          Invocation.method(
            #filter,
            [filter],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i5.Paging<_i6.ActiveLineModel>>.value(
                _FakePaging_4<_i6.ActiveLineModel>(
          this,
          Invocation.method(
            #filter,
            [filter],
          ),
        )),
      ) as _i10.Future<_i5.Paging<_i6.ActiveLineModel>>);
  @override
  _i10.Future<_i5.Paging<_i6.ActiveLineModel>> filterMeta({
    String? meta,
    num? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterMeta,
          [],
          {
            #meta: meta,
            #page: page,
          },
        ),
        returnValue: _i10.Future<_i5.Paging<_i6.ActiveLineModel>>.value(
            _FakePaging_4<_i6.ActiveLineModel>(
          this,
          Invocation.method(
            #filterMeta,
            [],
            {
              #meta: meta,
              #page: page,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i5.Paging<_i6.ActiveLineModel>>.value(
                _FakePaging_4<_i6.ActiveLineModel>(
          this,
          Invocation.method(
            #filterMeta,
            [],
            {
              #meta: meta,
              #page: page,
            },
          ),
        )),
      ) as _i10.Future<_i5.Paging<_i6.ActiveLineModel>>);
  @override
  T cast<T>(
    dynamic json,
    _i5.GenericCallback<T>? fromJsonFn,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cast,
          [
            json,
            fromJsonFn,
          ],
        ),
        returnValue: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #cast,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
        returnValueForMissingStub: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #cast,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
      ) as T);
  @override
  _i5.Paging<T> castPage<T>(
    dynamic json,
    _i5.GenericCallback<T>? fromJsonFn,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #castPage,
          [
            json,
            fromJsonFn,
          ],
        ),
        returnValue: _FakePaging_4<T>(
          this,
          Invocation.method(
            #castPage,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
        returnValueForMissingStub: _FakePaging_4<T>(
          this,
          Invocation.method(
            #castPage,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
      ) as _i5.Paging<T>);
  @override
  _i10.Future<dynamic> get({
    String? route,
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #route: route,
            #params: params,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> delete({
    String? route,
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #route: route,
            #params: params,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> put({
    String? route,
    Map<String, dynamic>? params,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #route: route,
            #params: params,
            #body: body,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> post({
    required String? route,
    required Map<String, dynamic>? params,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #route: route,
            #params: params,
            #body: body,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<String> hass({
    String? route,
    Map<String, dynamic>? params,
    String? code,
    String? clientid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hass,
          [],
          {
            #route: route,
            #params: params,
            #code: code,
            #clientid: clientid,
          },
        ),
        returnValue: _i10.Future<String>.value(''),
        returnValueForMissingStub: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
}

/// A class which mocks [HacsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHacsService extends _i1.Mock implements _i22.HacsService {
  @override
  set fromJsonFn(_i5.GenericCallback<_i7.BaseApi>? _fromJsonFn) =>
      super.noSuchMethod(
        Invocation.setter(
          #fromJsonFn,
          _fromJsonFn,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get resx => (super.noSuchMethod(
        Invocation.getter(#resx),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set resx(String? _resx) => super.noSuchMethod(
        Invocation.setter(
          #resx,
          _resx,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, String> get apiHeaders => (super.noSuchMethod(
        Invocation.getter(#apiHeaders),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  set apiHeaders(Map<String, String>? _apiHeaders) => super.noSuchMethod(
        Invocation.setter(
          #apiHeaders,
          _apiHeaders,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_1(
          this,
          Invocation.getter(#timeout),
        ),
        returnValueForMissingStub: _FakeDuration_1(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);
  @override
  set timeout(Duration? _timeout) => super.noSuchMethod(
        Invocation.setter(
          #timeout,
          _timeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<dynamic> getService() => (super.noSuchMethod(
        Invocation.method(
          #getService,
          [],
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<_i7.BaseApi> add(_i7.BaseApi? obj) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [obj],
        ),
        returnValue: _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #add,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #add,
            [obj],
          ),
        )),
      ) as _i10.Future<_i7.BaseApi>);
  @override
  _i10.Future<_i7.BaseApi> copy(_i7.BaseApi? obj) => (super.noSuchMethod(
        Invocation.method(
          #copy,
          [obj],
        ),
        returnValue: _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #copy,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #copy,
            [obj],
          ),
        )),
      ) as _i10.Future<_i7.BaseApi>);
  @override
  _i10.Future<_i7.BaseApi> update(_i7.BaseApi? obj) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [obj],
        ),
        returnValue: _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #update,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #update,
            [obj],
          ),
        )),
      ) as _i10.Future<_i7.BaseApi>);
  @override
  _i10.Future<_i7.BaseApi> remove(_i7.BaseApi? obj) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [obj],
        ),
        returnValue: _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #remove,
            [obj],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #remove,
            [obj],
          ),
        )),
      ) as _i10.Future<_i7.BaseApi>);
  @override
  _i10.Future<_i7.BaseApi> find(String? id) => (super.noSuchMethod(
        Invocation.method(
          #find,
          [id],
        ),
        returnValue: _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #find,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.BaseApi>.value(_FakeBaseApi_6(
          this,
          Invocation.method(
            #find,
            [id],
          ),
        )),
      ) as _i10.Future<_i7.BaseApi>);
  @override
  _i10.Future<List<_i7.BaseApi>> all() => (super.noSuchMethod(
        Invocation.method(
          #all,
          [],
        ),
        returnValue: _i10.Future<List<_i7.BaseApi>>.value(<_i7.BaseApi>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i7.BaseApi>>.value(<_i7.BaseApi>[]),
      ) as _i10.Future<List<_i7.BaseApi>>);
  @override
  _i10.Future<_i5.Paging<_i7.BaseApi>> filter([dynamic filter]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filter,
          [filter],
        ),
        returnValue: _i10.Future<_i5.Paging<_i7.BaseApi>>.value(
            _FakePaging_4<_i7.BaseApi>(
          this,
          Invocation.method(
            #filter,
            [filter],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i5.Paging<_i7.BaseApi>>.value(
            _FakePaging_4<_i7.BaseApi>(
          this,
          Invocation.method(
            #filter,
            [filter],
          ),
        )),
      ) as _i10.Future<_i5.Paging<_i7.BaseApi>>);
  @override
  _i10.Future<_i5.Paging<_i7.BaseApi>> filterMeta({
    String? meta,
    num? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterMeta,
          [],
          {
            #meta: meta,
            #page: page,
          },
        ),
        returnValue: _i10.Future<_i5.Paging<_i7.BaseApi>>.value(
            _FakePaging_4<_i7.BaseApi>(
          this,
          Invocation.method(
            #filterMeta,
            [],
            {
              #meta: meta,
              #page: page,
            },
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i5.Paging<_i7.BaseApi>>.value(
            _FakePaging_4<_i7.BaseApi>(
          this,
          Invocation.method(
            #filterMeta,
            [],
            {
              #meta: meta,
              #page: page,
            },
          ),
        )),
      ) as _i10.Future<_i5.Paging<_i7.BaseApi>>);
  @override
  T cast<T>(
    dynamic json,
    _i5.GenericCallback<T>? fromJsonFn,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cast,
          [
            json,
            fromJsonFn,
          ],
        ),
        returnValue: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #cast,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
        returnValueForMissingStub: _i18.dummyValue<T>(
          this,
          Invocation.method(
            #cast,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
      ) as T);
  @override
  _i5.Paging<T> castPage<T>(
    dynamic json,
    _i5.GenericCallback<T>? fromJsonFn,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #castPage,
          [
            json,
            fromJsonFn,
          ],
        ),
        returnValue: _FakePaging_4<T>(
          this,
          Invocation.method(
            #castPage,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
        returnValueForMissingStub: _FakePaging_4<T>(
          this,
          Invocation.method(
            #castPage,
            [
              json,
              fromJsonFn,
            ],
          ),
        ),
      ) as _i5.Paging<T>);
  @override
  _i10.Future<dynamic> get({
    String? route,
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #route: route,
            #params: params,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> delete({
    String? route,
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #route: route,
            #params: params,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> put({
    String? route,
    Map<String, dynamic>? params,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #route: route,
            #params: params,
            #body: body,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> post({
    required String? route,
    required Map<String, dynamic>? params,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #route: route,
            #params: params,
            #body: body,
          },
        ),
        returnValue: _i10.Future<dynamic>.value(),
        returnValueForMissingStub: _i10.Future<dynamic>.value(),
      ) as _i10.Future<dynamic>);
  @override
  _i10.Future<String> hass({
    String? route,
    Map<String, dynamic>? params,
    String? code,
    String? clientid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hass,
          [],
          {
            #route: route,
            #params: params,
            #code: code,
            #clientid: clientid,
          },
        ),
        returnValue: _i10.Future<String>.value(''),
        returnValueForMissingStub: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
}
